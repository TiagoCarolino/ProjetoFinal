@page "/editproduct/{id:int}"

@using ProjetoFinalAPI.Models;
@using Interfaces;
@using System.Diagnostics;


@inject IWebServiceAPI WebServiceAPI
@inject NavigationManager NavigationManager

<h3>EditProduct</h3>

<ModalComponent @ref=@Modal Message=@Message></ModalComponent>

@if (ProductData is not null)
{
    <EditForm Model="@ProductData" OnValidSubmit="UpdateProduct">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name:</label>
            <InputText id="name" class="form-control" @bind-Value="@ProductData.Name" />
        </div>

        <div class="form-group">
            <label for="price">Price:</label>
            <InputNumber id="price" class="form-control" @bind-Value="@ProductData.Price" step="0.01" />
        </div>
        <div class="form-group">
            <label for="price">Quantity:</label>
            <InputNumber id="quantity" class="form-control" @bind-Value="@ProductData.Quantity"/>
        </div>
        <div class="form-group">
            <label for="categories">Category:</label>
            <br />
            <select @onchange="OnselectChanged">
                <option value="0">Select a Category</option>
                @foreach (var item in Categories)
                {
                    <option value="@item.CategoryId">@item.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <InputTextArea id="description" class="form-control" @bind-Value="@ProductData.Description" />
        </div>
        <p></p>
        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
    <br />

    @if (ProductData.IsDeleted == false)
    {
        <input type="number" min="0" id="input" @bind-value="stockQuantity" />
        <button class="btn btn-primary" @onclick="() => AddStock(true)">Buy Stock</button>
        <button class="btn btn-danger" @onclick="() => AddStock(false)">Sell Stock</button>
    }
    <br />

    @foreach (var stock in productStocks)
    {
        <p>@(stock.IsEntry ? "Stock" : "Stock Sold"): @stock.Quantity <button class="delete-btn" @onclick="() => DeleteStock(stock)">X</button></p>
    }

}

